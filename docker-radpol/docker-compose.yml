version: '3.5'
services:
    hoster:
        image: dvdarias/docker-hoster
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock
            - /etc/hosts:/tmp/hosts
        hostname: ${HOSTNAME_DNS_LOCAL}
        networks:
            - app_net_bridge
    strapi:
        build:
            context: ./strapi
        environment:
            DATABASE_CLIENT: ${STRAPI_DATABASE_CLIENT}
            DATABASE_NAME: ${STRAPI_DATABASE_NAME}
            DATABASE_HOST: ${HOSTNAME_POSTGRES_LOCAL}
            DATABASE_PORT: ${POSTGRES_PORT}
            DATABASE_USERNAME: ${POSTGRES_USER}
            DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
            PORT: ${STRAPI_PORT}
            CURRENT_UID_GID: ${CURRENT_UID_GID}
            CURRENT_UID: ${CURRENT_UID}
            ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
        links:
            - postgres:postgres
        volumes:
            - ./../strapi:/srv/app
            - strapi_uploads:/srv/app/public/uploads
            - /etc/hosts:/etc/hosts:ro
        networks:
            - app_net_bridge
        hostname: ${HOSTNAME_STRAPI_LOCAL}
        #user: ${CURRENT_UID_GID}
        depends_on:
            - postgres
            - hoster
    postgres:
        image: postgres:12.4
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - db_data:/var/lib/postgresql/data
            - /etc/hosts:/etc/hosts:ro
        hostname: ${HOSTNAME_POSTGRES_LOCAL}
        networks:
            - app_net_bridge
        depends_on:
            - hoster
    front:
        build:
            context: ./front
        volumes:
            - ./../app:/usr/src/app
            - ~/.ssh:/root/.ssh_copy:ro
            - /etc/hosts:/etc/hosts:ro
        depends_on:
            - hoster
            - strapi
        env_file:
            - .env
        environment:
            - CURRENT_UID_GID=${CURRENT_UID_GID}
            - CHOKIDAR_USEPOLLING=true
            - HOME='.'
        ports:
            - 3000:3000
        networks:
            - app_net_bridge
        hostname: ${HOSTNAME_FRONT_LOCAL}
        user: ${CURRENT_UID_GID}
    nginx:
        image: nginx
        ports:
            - 6080:80
        volumes:
            - ./nginx/conf.d/mysite.template:/etc/nginx/conf.d/mysite.template:ro
            - ~/.ssh:/root/.ssh_copy:ro
            - /etc/hosts:/etc/hosts:ro
        depends_on:
            - front
            - hoster
        environment:
            - CURRENT_UID_GID=${CURRENT_UID_GID}
        env_file:
            - .env
        networks:
            - app_net_bridge
        command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        hostname: ${HOSTNAME_NGINX_LOCAL}
volumes:
    db_data:
        driver: local
    strapi_uploads:
        driver: local
networks:
    app_net_bridge:
        driver: bridge
        driver_opts:
            com.docker.network.enable_ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: ${APP_DOCKER_SUBNET}
